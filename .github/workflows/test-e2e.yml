name: Tests end-to-end

on:
  pull_request:
    branches-ignore:
      - production
      - production-static

jobs:
  end-to-end-test:
    name: End-to-end tests
    runs-on: ubuntu-latest
    env:
      e2e-directory: ./e2e
      datalayer-directory: ./data_layer
      project-docker-directory: ./
      CYPRESS_IMAGE: 'cypress/browsers:node12.16.1-chrome80-ff73'
      LANG: 'fr_FR.UTF-8'
      SUPABASE_KEY: ${{secrets.TEST_ANON_SUPABASE_KEY}}
      ANON_KEY: ${{secrets.TEST_ANON_SUPABASE_KEY}}
      SERVICE_ROLE_KEY: ${{secrets.TEST_SERVICE_SUPABASE_KEY}}
      REACT_APP_CRISP_WEBSITE_ID: 96fe7866-d005-4623-80b1-bd772e99855c
      SUPABASE_SERVICE_ROLE_KEY: ${{secrets.TEST_SERVICE_SUPABASE_KEY}}
      SUPABASE_ANON_KEY: ${{secrets.TEST_ANON_SUPABASE_KEY}}
      GIT_HEAD_REF: ${{github.head_ref}}
      GIT_SHA: ${{github.sha}}

    steps:
      # cf. https://github.com/actions/checkout
      - uses: actions/checkout@v2

      # fixe la langue de l'environnement de test : permet de faire passer les
      # tests de composant utilisant des fonctions telles que toLocaleString()
      - name: Set locale
        run: |
          sudo locale-gen ${{env.LANG}}
          sudo update-locale LANG=${{env.LANG}}

      # Copy all projet .sample.env into .env with the variables
      - name: Make .env files
        run: sh make_dot_env.sh

      # Build docker
      - name: Build docker
        run: docker-compose build
        working-directory: ${{env.project-docker-directory}}

      # Tear down docker
      - name: Down docker
        run: docker-compose down
        working-directory: ${{env.project-docker-directory}}

      # Launch docker
      - name: Launch docker
        run: docker-compose up -d
        working-directory: ${{env.project-docker-directory}}

      # Wait for the rest container
      - name: Wait for rest
        run: sh scripts/wait_for_rest.sh
        working-directory: ${{env.datalayer-directory}}

      # Wait for the front container
      - name: Wait for front
        run: sh scripts/wait_for_front.sh
        working-directory: ${{env.datalayer-directory}}

      # run tests into chrome
      - name: Cypress run (chrome)
        uses: cypress-io/github-action@v2
        with:
          browser: chrome
          working-directory: ${{env.e2e-directory}}
          record: true
        env:
          # pass the Dashboard record key as an environment variable
          CYPRESS_RECORD_KEY: ${{secrets.CYPRESS_RECORD_KEY}}
          CYPRESS_PROJECT_ID: ${{secrets.CYPRESS_PROJECT_ID}}
          # pass GitHub token to allow accurately detecting a build vs a re-run build
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

      - name: Generate test report (chrome)
        if: failure()
        run: npm run report
        working-directory: ${{env.e2e-directory}}
        env:
          BROWSER: chrome

      - name: Upload report to GitHub (chrome)
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: report-chrome
          path: ${{env.e2e-directory}}/report

      - name: Collect docker logs on failure
        if: failure()
        uses: jwalton/gh-docker-logs@v1
        with:
          dest: './logs'

      - name: Tar logs
        if: failure()
        run: tar cvzf ./logs.tgz ./logs

      - name: Upload logs to GitHub
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: logs.tgz
          path: ./logs.tgz
