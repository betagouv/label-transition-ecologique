name: Deploy territoiresentransitions.fr website

on:
  push:
    branches:
      - production-static

jobs:
  build:
    name: Build static pages on territoiresentransitions.fr
    runs-on: ubuntu-latest
    env:
      working-directory: ./territoiresentransitions.fr

    steps:
      # cf. https://github.com/actions/checkout
      - uses: actions/checkout@v4

      # Cache Node modules
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      # Build client with SvelteKit
      - name: Build client with SvelteKit
        run: |
          npm install
          npm run build
        working-directory: ${{env.working-directory}}

      # Upload built client app as an artefact.
      - name: Upload exported client app
        uses: actions/upload-artifact@v2
        with:
          name: territoiresentransitions.fr
          path: territoiresentransitions.fr/build

  # This job retrieves the exported client app and upload it to Scaleway.
  deploy-on-scaleway:
    name: Deploy static pages on Scaleway
    runs-on: ubuntu-latest
    needs: build
    environment: production

    steps:
      # cf. https://github.com/actions/checkout
      # This step uses a GitHub Personal Access Token. If the CI is broken
      # because of that, you can login into your own GitHub account, generate
      # a new Personal Access Token and set it in the project secrets.
      - uses: actions/checkout@v4

      # Download the previously built client app.
      - name: Download exported client app
        uses: actions/download-artifact@v2
        with:
          name: territoiresentransitions.fr
          path: ~/tmp/client

      # Restore cache or create a new one for awscli-plugin-endpoint
      - name: Set up Python cache
        uses: actions/cache@v2
        env:
          python-deploy-cache-name: python-deploy-cache
        with:
          path: /opt/hostedtoolcache/Python
          key: ${{ runner.os }}-${{ env.python-deploy-cache-name }}-${{ env.python-version }}
          restore-keys: |
            ${{ runner.os }}-${{ env.python-deploy-cache-name }}
            ${{ runner.os }}-

      # Install awscli-plugin-endpoint to enable custom endpoints on Scaleway
      # with AWS CLI
      - name: Install awscli-plugin-endpoint
        run: |
          pip3 install awscli-plugin-endpoint

      # Use AWS CLI to upload the client app on Scaleway.
      - name: Deploy on Scaleway
        run: |
          aws s3 cp ~/tmp/client s3://territoiresentransitions.fr --recursive --acl public-read
        env:
          AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
          AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          AWS_CONFIG_FILE: ${{github.workspace}}/awscli_config
