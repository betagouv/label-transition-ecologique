name: Test Business 

on:
  pull_request:
    branches-ignore:
      - production
      - production-static
  push:
jobs:
  business-test:
    name: Business tests 
    runs-on: ubuntu-latest
    env:
      business-directory:  ./business
      datalayer-directory: ./data_layer
      datalayer-docker-directory: ./data_layer/test_only_docker
      SUPABASE_KEY: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiYW5vbiIsImlhdCI6MTYyNzIwODU0MCwiZXhwIjoxOTc0MzYzNzQwfQ.zcaQfHd3VA7XgJmdGfmV86OLVJT9s2MTmSy-e69BpUY
      SUPABASE_URL: http://localhost:8000
      SUPABASE_WS: ws://localhost:8000

    steps:
      # cf. https://github.com/actions/checkout
      - uses: actions/checkout@v2

      # Set up Python
      - name: Set up Python 3.x
        uses: actions/setup-python@v2
        with:
          python-version: '3.9.1'

      # Install the dependencies manager.
      - name: Install pipenv
        run: |
          python -m pip install --upgrade pipenv wheel
            pipenv install
            pipenv install --dev
        working-directory: ${{env.business-directory}}

      # # Launch docker
      # - name: Launch docker 
      #   run: |
      #     cp .env.sample  .env
      #     docker-compose up --build -d
      #   working-directory: ${{env.datalayer-docker-directory}}

      # # [Prepare DB] Insert fakes
      # - name: Insert fake data in database 
      #   run: sh insert_fakes.sh
      #   working-directory: ${{env.datalayer-directory}}

      # Use Pytest to run tests
      - name: Unit tests
        run:  pipenv run pytest tests/unit
        working-directory: ${{env.business-directory}}

      # - name: All tests (unit + integration + e2e)
      #   run:  pipenv run pytest tests
      #   working-directory: ${{env.business-directory}}
      #   env: 
      #     SUPABASE_TEST_URL: ${{env.SUPABASE_URL}} 
      #     SUPABASE_TEST_WS: ${{env.SUPABASE_WS}} 
      #     SUPABASE_TEST_KEY: ${{env.SUPABASE_KEY}} 
      #     REFERENTIELS_REPOSITORY: SUPABASE 
      #     STATUTS_REPO: SUPABASE 
      #     LABELISATION_REPOSITORIES: SUPABASE 
      #     REALTIME: REPLAY
    