
### Generate a recovery OTP using the admin API.
POST {{api}}/auth/v1/admin/generate_link
apikey: {{service}}
Authorization: Bearer {{service}}
Content-Type: application/json

{
  "type": "recovery",
  "email": "yolo@dodo.com"
}

> {%
    client.test("Request executed successfully", function() {
        client.assert(response.status === 200, "Response status is not 200");
    });
    client.global.set("recovery_token", response.body['action_link'].match(/token=([A-Z0-9\-\_]+)/i)[1]);
    client.global.set("email_otp", response.body['email_otp']);
    client.global.set("verification_type", response.body['verification_type']);
    client.global.set("redirect_to", response.body['redirect_to']);
    client.global.set("email", response.body['email']);
%}

### Consume the recovery OTP as an user.
POST {{api}}/auth/v1/verify
apikey: {{anon}}
Content-Type: application/json

{
  "type": "{{verification_type}}",
  "token": "{{email_otp}}",
  "redirect_to": "{{redirect_to}}",
  "email": "{{email}}"
}


> {%
    client.test("Request executed successfully", function() {
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(response.body["access_token"], "La r√©ponse ne comporte pas access_token");
        client.assert(response.body["token_type"] === "bearer", "Le token n'est pas un bearer token");
    });
%}
