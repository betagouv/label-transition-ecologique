### Authenticate as a user
POST {{api}}/auth/v1/token?grant_type=password
apikey: {{anon}}
Content-Type: application/json

{
  "email": "{{yolo_mail}}",
  "password": "{{yolo_pass}}"
}


> {%
    client.test("Request executed successfully", function() {
        client.assert(response.status === 200, "Response status is not 200");
    });
    client.log('token is ' + response.body['access_token']);
    client.global.set("auth_token", response.body['access_token']);
%}

### List all action_commentaire for collectivite 1
GET {{api}}/rest/v1/action_commentaire?collectivite_id=eq.1
apikey: {{anon}}
Authorization: Bearer {{auth_token}}

> {%
    client.test("List executed successfully", function() {
        client.assert(response.status === 200, "Response status is not 200");
    });
%}

### Upsert a action_commentaire
POST {{api}}/rest/v1/action_commentaire
apikey: {{anon}}
Authorization: Bearer {{auth_token}}
prefer: return=representation, resolution=merge-duplicates
Content-Type: application/json

{
  "collectivite_id": 1,
  "action_id": "cae_1.2.3",
  "commentaire": "un commentaire"
}

> {%
    client.test("Upsert executed successfully", function() {
        client.assert(response.status === 201, "Response status is not 201");
    });
%}


### List all indicateur_resultat for collectivite 1
GET {{api}}/rest/v1/indicateur_resultat?collectivite_id=eq.1
apikey: {{anon}}
Authorization: Bearer {{auth_token}}

> {%
    client.test("List executed successfully", function() {
        client.assert(response.status === 200, "Response status is not 200");
    });
%}

### Upsert a indicateur_resultat
POST {{api}}/rest/v1/indicateur_resultat
apikey: {{anon}}
Authorization: Bearer {{auth_token}}
prefer: return=representation, resolution=merge-duplicates
Content-Type: application/json

{
  "valeur": 20,
  "annee": 2020,
  "collectivite_id": 1,
  "indicateur_id": "cae_8"
}

> {%
    client.test("Upsert executed successfully", function() {
        client.assert(response.status === 201, "Response status is not 201");
    });
%}

### Upsert a indicateur_resultat on a collectivitÃ© that is not ours
POST {{api}}/rest/v1/indicateur_resultat
apikey: {{anon}}
Authorization: Bearer {{auth_token}}
prefer: resolution=merge-duplicates
Content-Type: application/json

{
  "valeur": 20,
  "annee": 2020,
  "collectivite_id": 10,
  "indicateur_id": "cae_8"
}

> {%
    client.test("Upsert was rejected as expected", function() {
        client.assert(response.status === 403, "Response status is not 403");
    });
%}

### List all indicateur_objectif for collectivite 1
GET {{api}}/rest/v1/indicateur_objectif?collectivite_id=eq.1
apikey: {{anon}}
Authorization: Bearer {{auth_token}}

> {%
    client.test("List executed successfully", function() {
        client.assert(response.status === 200, "Response status is not 200");
    });
%}

### Upsert a indicateur_objectif
POST {{api}}/rest/v1/indicateur_objectif
apikey: {{anon}}
Authorization: Bearer {{auth_token}}
prefer: return=representation, resolution=merge-duplicates
Content-Type: application/json

{
  "valeur": 20,
  "annee": 2020,
  "collectivite_id": 1,
  "indicateur_id": "cae_8"
}

> {%
    client.test("Upsert executed successfully", function() {
        client.assert(response.status === 201, "Response status is not 201");
    });
%}


### List all indicateur_commentaire for collectivite 1
GET {{api}}/rest/v1/indicateur_commentaire?collectivite_id=eq.1
apikey: {{anon}}
Authorization: Bearer {{auth_token}}

> {%
    client.test("List executed successfully", function() {
        client.assert(response.status === 200, "Response status is not 200");
    });
%}

### Upsert a indicateur_commentaire
POST {{api}}/rest/v1/indicateur_commentaire
apikey: {{anon}}
Authorization: Bearer {{auth_token}}
prefer: return=representation, resolution=merge-duplicates
Content-Type: application/json

{
  "collectivite_id": 1,
  "indicateur_id": "cae_8",
  "commentaire": "un commentaire sur cae_8"
}

> {%
    client.test("Upsert executed successfully", function() {
        client.assert(response.status === 201, "Response status is not 201");
    });
%}


### List all indicateur_personnalise_definition for collectivite 1
GET {{api}}/rest/v1/indicateur_personnalise_definition?collectivite_id=eq.1
apikey: {{anon}}
Authorization: Bearer {{auth_token}}

> {%
    client.test("List executed successfully", function() {
        client.assert(response.status === 200, "Response status is not 200");
    });
%}

### Upsert a indicateur_personnalise_definition
POST {{api}}/rest/v1/indicateur_personnalise_definition
apikey: {{anon}}
Authorization: Bearer {{auth_token}}
prefer: return=representation, resolution=merge-duplicates
Content-Type: application/json

{
  "id": 0,
  "collectivite_id": 1,
  "titre": "Mon indicateur perso",
  "description": "Description",
  "unite": "m2/hab",
  "commentaire": "Mon commentaire"
}

> {%
    client.test("Upsert executed successfully", function() {
        client.assert(response.status === 201, "Response status is not 201");
    });
%}



### List all indicateur_personnalise_resultat for collectivite 1
GET {{api}}/rest/v1/indicateur_personnalise_resultat?collectivite_id=eq.1
apikey: {{anon}}
Authorization: Bearer {{auth_token}}

> {%
    client.test("List executed successfully", function() {
        client.assert(response.status === 200, "Response status is not 200");
    });
%}

### Upsert a indicateur_personnalise_resultat
POST {{api}}/rest/v1/indicateur_personnalise_resultat
apikey: {{anon}}
Authorization: Bearer {{auth_token}}
prefer: return=representation, resolution=merge-duplicates
Content-Type: application/json

{
  "valeur": 20,
  "annee": 2020,
  "collectivite_id": 1,
  "indicateur_id": 1
}

> {%
    client.test("Upsert executed successfully", function() {
        client.assert(response.status === 201, "Response status is not 201");
    });
%}

### List all indicateur_personnalise_objectif for collectivite 1
GET {{api}}/rest/v1/indicateur_personnalise_objectif?collectivite_id=eq.1
apikey: {{anon}}
Authorization: Bearer {{auth_token}}

> {%
    client.test("List executed successfully", function() {
        client.assert(response.status === 200, "Response status is not 200");
    });
%}

### Upsert a indicateur_personnalise_objectif
POST {{api}}/rest/v1/indicateur_personnalise_objectif
apikey: {{anon}}
Authorization: Bearer {{auth_token}}
prefer: return=representation, resolution=merge-duplicates
Content-Type: application/json

{
  "valeur": 20,
  "annee": 2020,
  "collectivite_id": 1,
  "indicateur_id": 0
}

> {%
    client.test("Upsert executed successfully", function() {
        client.assert(response.status === 201, "Response status is not 201");
    });
%}
