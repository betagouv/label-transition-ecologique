### Authenticate as a user
POST {{api}}/auth/v1/token?grant_type=password
apikey: {{anon}}
Content-Type: application/json

{
  "email": "{{yolo_mail}}",
  "password": "{{yolo_pass}}"
}


> {%
    client.test("Request executed successfully", function() {
        client.assert(response.status === 200, "Response status is not 200");
    });
    client.log('token is ' + response.body['access_token']);
    client.global.set("auth_token", response.body['access_token']);
%}


### List action relation
GET {{api}}/rest/v1/action_relation?select=*
apikey: {{anon}}
Authorization: Bearer {{auth_token}}

> {%
    client.test("List executed successfully", function() {
        client.assert(response.status === 200, "Response status is not 200");
    });
%}


### List action down to tache
POST {{api}}/rest/v1/rpc/action_down_to_tache
apikey: {{anon}}
Authorization: Bearer {{auth_token}}
Content-Type: application/json

{
  "referentiel": "eci",
  "identifiant": "1.1.1"
}

> {%
    client.test("List executed successfully", function() {
        client.assert(response.status === 200, "Response status is not 200");
    });
%}

### Retrieve action exemple
POST {{api}}/rest/v1/rpc/action_exemples
apikey: {{anon}}
Authorization: Bearer {{auth_token}}
Content-Type: application/json

{
  "id": "eci_1.1.1"
}

> {%
    client.test("List executed successfully", function() {
        client.assert(response.status === 200, "Response status is not 200");
    });
%}


### Retrieve action ressources
POST {{api}}/rest/v1/rpc/action_ressources
apikey: {{anon}}
Authorization: Bearer {{auth_token}}
Content-Type: application/json

{
  "id": "eci_2.2"
}

> {%
    client.test("List executed successfully", function() {
        client.assert(response.status === 200, "Response status is not 200");
    });
%}

